Release 0.1.0
- Placeholder release

Release 0.2.0 - First functional release that focuses on core portal framework
and user-less applications

Singlepage CLI
- Create minimal or full app boilerplate
- Development support via "singlepage serve" that serves from memory and uses
  livereload 
- Build app for deployment

Singlepage Portal Framework
- Drag-n-drop portal editing via admin login
- Vue component property editor form created from props definition
- Support for custom component commands and property editor
- Customization of portal window look & feel by assigning custom classes to
  window, title, or body area
- Message customization via your own messages file
- Portal messages internationalized to English and Marathi
- App-specific services development (just place *Service.js files in services 
  directory)
- Component-specific internationalization
- Built-in page grid layouts with the ability to define your own
- Role based access control for services
- Default implmentation of core services that do not have any external 
  dependencies

Release 0.2.5
- build command now does not delete existing dist directory and .git, 
  .gitignore to support Heroku git-based deployment
- Dependency on chokidar is now completely removed from runtime code
- Added engines element to package.json
- Fixed start command in package.json

Release 0.3.0
- Objects needed to communicate with Singlepage (Response, ServiceDirectory)
  are now passed in the init method
- Added code to test property editor functionality in Echo.vue. The code needs
  to be uncommented to test functionality
- Added internationalization example to Echo.vue
- build_util.js now strips comments before extracting props object from .vue
  files
- Added Procfile (used by Heroku) to the list of files NOT deleted when new 
  dist files are written
- Fixed a bug in FormField.vue which was resetting error styling in one field 
  when another field is changed
- rpc.js now displays status code dependent error messages (instead of 
  error_generic) when the caller does not supply error handler
- Added support for handing editing of Vue component properties of type Array
- Refactored service loading and access. A new object ServiceDirectory is now 
  supplied to services to look up other services

Release 0.3.1
- Added link to singlepagejs.com site in README.md

Release 0.3.2
- The menu layout page now shows error message if a user tries to view invalid
  or inaccessible option
- Changed the way not found page is formatted
- If user tries to access unloaded page and the user is not logged on, s/he is
  directed to log in page and redirected to the original page after logging in
- Fixed a bug in simple_site_service where changed permissions were not getting
  cached
- Added a page and component accessible to SUPERADMIN role to the demo app to
  demonstrate role-based access control

Release 0.3.3
- Added link to www.singlepagejs.com Web site in package.json

Release 0.3.4
- Fixed a bug which was causing files in assets directory not being served 
  correctly in development mode

Release 0.3.5
- Last component now has zero margin to allow for full page displays without 
  scrollbars
- Adjusted padding of most page layouts
- Fixes footer left alignment in default App
- Fixed page transitions by adding :key to Page.vue
- Added the ability show dropup in Dropdown.vue via valign prop
- Fixed a bug in PageEditor.vue when the option was selected from an admin page
  (as opposed to editable portal page)
- Fixed sticky prelogin component state after login redirect

Release 0.3.6
- Added the ability to define site-specific configuration parameters

Release 0.3.7
- Eliminated dependency on Google icons
- If user refreshes or directly visits an admin page, it now shows correctly.
  Previously it showed "Page Not Found"

Release 0.3.8
- Modified splash content of demo app to show better on smaller screens
- Cleaned up sp.css and streamlined CSS classes related to full page and
  login/logout layouts. The class "middle" is now removed from sp.css. 
- Updated App.vue to show Login button only when IS_MULTI_USER flag in 
  configuration is set to true
- Changed default value of IS_MULTI_USER to true (even though we don't 
  support the mode yet) so that the developer sees the Login button
- Styling of Login card now be changed by modifying sp-login-card class
  in sp.css
- Modified Component.vue to NOT append 'sp-component' class to custom 
  classes specified via cclass attribute in the page layout definition
- Fixed a bug where the sidebar menu was not closing after selecting Login
- RSSViewer component now calls URLFetcher service to get the RSS content
  instead of relying on a CORS proxy
- Removed "flex-grow-1" class from all component templates. Developers can
  add that class (needed for uniformly sized components in a row) to the
  "cclass" attribute of the container in the layout.
- Added "URLFetcher" service that can fetch and return contents of a URL.
  Currently it is used by the RSSViewer component.

Release 0.3.9
- Added node-fetch to rollup's externals to prevent related error message
- Fixed rollup-plugin-vue version to 5.1.1 since 5.1.2 version introduced
  a bug or incompatibility

Release 0.4.0
- Added icons and manifest.json for partial PWA support
- Separated essential CSS into sp.css file that is loaded directly and the rest
  of the css is now loaded via splib.js This change was prompted by a bug in
  cssnano used by postcss plugin that causes invalid normalization of 
  background-position. See more details in rollup.config.js
- Minor CSS and content changes to make the demo app score 100% on 
  accessibility in the lighthouse audit
- Moved dropdown related CSS from bootstrap.css to its own file included in
  Dropdown.vue
- Moved nav tabs CSS from bootstrap.css to a nav.css included in Tabs.css
- Added source scss files for bootstrap-reboot.css, bootstrap-grid.css, and
  bootstrap.css
- Fixed footer links for privacy policy and terms of use in App.vue
- Added new Vue component sp-spinner
- Added new Vue components: sp-tabs and sp-tab-pane
- Dropdown component is now loaded dynamically
- Requests for non-existent files are now logged, previously it was throwing
  uncaught error
- Fixed component styles to improve contrast so as to pass accessibility test
- Removed references to alert related CSS classes from component templates. 
- Defined new CSS classes sp-component-<variant> (variants: success, danger,
  warning, info) that are used in corresponding note and card component 
  templates
- Added "update" option to singlepage command that updates Singlepage runtime
  libraries in app's lib directory to the current version 
